import React, { useCallback, useEffect, useRef, useState } from "react";

const SavaGaza = () => {
  const TABLET_POINT = 1024;
  const [windowDimensions, setWindowDimensions] = useState({
    width: window.innerWidth,
    height: window.innerHeight,
  });
  const animationFrameRef = useRef(null);
  const elementRef = useRef(null);
  const [x, setX] = useState(0);
  const [y, setY] = useState(0);
  const [dx, setDx] = useState(
    windowDimensions.width >= TABLET_POINT ? 2.4 : 1.4
  );
  const [dy, setDy] = useState(
    windowDimensions.width >= TABLET_POINT ? 1.8 : 1
  );

  const [rotation, setRotation] = useState(-45);

  const dr = 0.15;

  const handleResize = useCallback(() => {
    setWindowDimensions({
      width: window.innerWidth,
      height: window.innerHeight,
    });
  }, []);

  useEffect(() => {
    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
      cancelAnimationFrame(animationFrameRef.current);
    };
  }, [handleResize]);

  const update = useCallback(() => {
    if (!elementRef.current) return;

    const maxX = windowDimensions.width - elementRef.current.offsetWidth;
    const maxY = windowDimensions.height - elementRef.current.offsetHeight;

    setDx((prevDx) => {
      if (x + prevDx > maxX || x + prevDx < 0) {
        return -prevDx;
      }
      return prevDx;
    });

    setDy((prevDy) => {
      if (y + prevDy > maxY || y + prevDy < 0) {
        return -prevDy;
      }
      return prevDy;
    });

    setX((prevX) => prevX + dx);
    setY((prevY) => prevY + dy);
    setRotation((prevRotation) => prevRotation + dr);

    if (elementRef.current) {
      elementRef.current.style.transform = `translate(${x}px, ${y}px) rotate(${rotation}deg)`;
    }
  }, [elementRef, windowDimensions, x, y, dx, dy, rotation, dr]);

  useEffect(() => {
    const animate = () => {
      update();
      animationFrameRef.current = requestAnimationFrame(animate);
    };

    animationFrameRef.current = requestAnimationFrame(animate);

    return () => {
      cancelAnimationFrame(animationFrameRef.current);
    };
  }, [update]);

  return (
    <div className="save-gaza-r" ref={elementRef}>
      <div className="svg-holder absolute w-full h-full top-0 left-0 -z-10">
        <Icon />
      </div>
      <div className="save-gaza flex flex-col items-center">
        <span className="bg-white mb-2">FREE</span>
        <span className="bg-white">PALESTINE</span>
      </div>
    </div>
  );
};

export default SavaGaza;

export function Icon() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="100"
      height="100"
      viewBox="0 0 218 621"
    >
      <defs>
        <clipPath id="a" clipPathUnits="userSpaceOnUse">
          <path
            fill="#ce1126"
            d="M622.253 497.508c-21.102-23.452-52.468-53.393-52.468-53.393l-22.106-18.755c-26.26-17.838-52.143-31.908-74.347-42.572-37.838-18.171-64.984-26.426-64.984-26.426-4.018-2.68-11.388-1.342-16.077-6.029-4.69-4.691-23.445-9.38-23.445-9.38-52.92-22.106-168.807-36.17-168.807-36.17-2.683-1.342-8.711-.67-12.059-2.683-3.35-2.01-7.37-1.339-26.127-4.689-18.755-3.347-11.386-11.386-11.386-11.386 9.377-8.038 0-14.738-5.36-18.756-4.141-3.106-13.457-4.208-17.492-4.55-1.19-.1-1.94-.137-1.94-.137-8.04 6.031-12.73 2.01-16.077.67-3.35-1.338-32.826-11.388-40.193-10.05-1.09.2-2.208.253-3.323.196 0 0 3.323-13.594 3.323-18.951 0-5.36-1.34-11.387-1.34-15.409 0-4.018-4.69-14.068-2.01-18.084 2.68-4.022 10.05-11.39 10.05-11.39s2.009-5.361 2.009-10.048c0-4.69-2.68-9.379-4.69-12.729-.56-.938-1.399-2.63-2.399-4.616-2.569-5.093-6.279-12.21-9.653-14.138-4.686-2.68-16.076-8.039-22.106-7.368-6.027.668-23.443-3.35-25.453-4.022-2.007-.669-12.056-3.348-6.027-8.037 6.027-4.688 8.037-8.036 8.037-12.056s-.668-17.416 5.36-12.731c6.029 4.692 10.718 4.692 13.398 4.02 2.68-.669 7.369-2.68 18.756.672 11.386 3.35 29.474 4.02 32.153 4.689 2.676.666 30.815 4.018 30.815 4.018l9.943-.063c.522-.863 1.575-1.762 3.453-2.617 7.37-3.35 18.088-8.038 27.463-5.357 0 0 .672-4.692 5.361-4.022 4.688.67 24.115 4.022 24.115 4.022s4.018.667 4.018-2.01h.006c0-2.68 3.348-9.38 6.698.67 3.352 10.047 0 9.38 6.697 13.397 6.7 4.02 5.36 7.368 12.057 7.368 6.7 0 20.1-2.009 24.115.67 4.019 2.682 15.407 2.01 18.759 2.012 0 0 22.104-1.341 29.47.67 4.177 1.137 8.34 1.186 12.15.907 2.913-.219 5.623-.622 7.943-.91 5.361-.67 29.476-4.69 35.504-3.349l.006-.01c6.027 1.339 39.522 10.716 46.221 11.387s18.084 1.342 23.447-.67c5.357-2.006 18.755 0 26.125 1.342 0 0 12.727-3.348 17.415-3.348h17.416l6.698 2.677 213.111 21.262s17.986 6.223 26.025 8.9c8.038 2.682 22.106-.668 29.474 8.71 7.37 9.377 10.048 12.727 18.088 14.067 8.037 1.341 20.095-.002 25.458 7.37 0 0 25.452 10.046 32.152 10.716 0 0 31.483 14.066 38.853 16.746 7.366 2.679 43.542 14.736 51.58 12.058 8.04-2.68 14.737-7.37 24.116-2.68 9.377 4.691 23.445 10.719 40.194 6.028 16.745-4.689 24.113-6.698 28.804-2.01 4.689 4.69 34.165 18.085 40.863 20.096 6.7 2.01 29.474 4.69 34.833 5.357 5.357.67 14.734 2.011 21.436 5.36 0 0 24.785 10.049 34.16 10.049 9.378 0 23.445 5.358 30.145 8.706l13.253 4.828c.315 3.047 3.83 6.563 8.855 8.576 2.73 1.09 5.127 2.738 7.235 4.81 0 0-14.605 13.273-23.982 12.603-9.38-.67-20.097-1.34-26.793 1.34-6.701 2.681-20.099 5.36-24.117 5.36l-70.337 23.444s-121.247 38.183-127.276 43.541c0 0-4.089 5.537-9.176 10.509-4.995 4.882-10.95 9.226-14.937 7.235-8.037-4.02-13.062-4.02-20.097 0-7.032 4.02-17.082 5.025-24.116 5.025 0 0-71.341 23.11-86.412 31.148z"
          ></path>
        </clipPath>
      </defs>
      <path
        fill="none"
        stroke="#000"
        strokeWidth="3"
        d="M7.661 319.886c12-10.797 27.32-26.846 27.32-26.846l9.596-11.311c9.127-13.436 16.326-26.68 21.782-38.041 9.298-19.36 13.522-33.25 13.522-33.25 1.371-2.056.686-5.827 3.085-8.226s4.8-11.996 4.8-11.996c11.31-27.077 18.506-86.373 18.506-86.373.687-1.373.343-4.457 1.373-6.17 1.028-1.714.685-3.77 2.399-13.368 1.713-9.597 5.826-5.826 5.826-5.826 4.113 4.797 7.541 0 9.597-2.743 1.589-2.119 2.153-6.885 2.328-8.95.051-.608.07-.993.07-.993-3.086-4.113-1.028-6.513-.343-8.226s5.827-16.795 5.142-20.565a7.4 7.4 0 01-.1-1.7s6.956 1.7 9.697 1.7c2.742 0 5.826-.686 7.884-.686 2.056 0 7.198-2.399 9.253-1.028 2.058 1.371 5.828 5.142 5.828 5.142s2.743 1.028 5.141 1.028c2.4 0 4.799-1.371 6.513-2.4.48-.286 1.346-.715 2.362-1.227 2.606-1.314 6.247-3.213 7.234-4.94 1.371-2.397 4.113-8.225 3.77-11.31-.342-3.084 1.714-11.995 2.058-13.023.342-1.028 1.713-6.17 4.112-3.084 2.399 3.084 4.112 4.112 6.169 4.112s8.911-.342 6.514 2.742c-2.401 3.085-2.401 5.485-2.057 6.856.342 1.37 1.371 3.77-.344 9.596s-2.057 15.081-2.399 16.452c-.341 1.37-2.056 15.767-2.056 15.767l.032 5.088c.442.267.902.806 1.339 1.767 1.714 3.77 4.113 9.254 2.741 14.051 0 0 2.401.344 2.058 2.743s-2.058 12.34-2.058 12.34-.341 2.055 1.029 2.055v.003c1.371 0 4.799 1.713-.343 3.427-5.141 1.715-4.8 0-6.855 3.427-2.057 3.428-3.77 2.742-3.77 6.169 0 3.428 1.028 10.284-.343 12.339-1.372 2.056-1.028 7.883-1.029 9.598 0 0 .686 11.31-.343 15.079-.582 2.137-.607 4.267-.464 6.217.112 1.49.318 2.877.466 4.064.342 2.743 2.399 15.082 1.713 18.166l.005.003c-.685 3.084-5.483 20.222-5.826 23.65-.344 3.427-.687 9.253.343 11.997 1.026 2.741 0 9.596-.687 13.367 0 0 1.713 6.512 1.713 8.911v8.911l-1.37 3.427-10.879 109.042s-3.184 9.203-4.554 13.316c-1.372 4.113.342 11.311-4.456 15.081-4.798 3.771-6.512 5.141-7.198 9.255-.686 4.112.001 10.282-3.771 13.026 0 0-5.14 13.023-5.483 16.451 0 0-7.197 16.109-8.568 19.88-1.371 3.769-7.54 22.279-6.17 26.392s3.771 7.54 1.371 12.339c-2.4 4.798-5.484 11.996-3.084 20.566 2.399 8.568 3.427 12.338 1.028 14.738-2.399 2.399-9.253 17.481-10.282 20.908-1.028 3.428-2.4 15.081-2.741 17.823-.343 2.741-1.029 7.539-2.743 10.968 0 0-5.141 12.682-5.141 17.479 0 4.798-2.742 11.996-4.455 15.424l-2.47 6.781c-1.559.161-3.358 1.96-4.388 4.531-.558 1.397-1.401 2.623-2.461 3.702 0 0-6.792-7.473-6.449-12.271s.686-10.283-.685-13.709c-1.372-3.429-2.743-10.284-2.743-12.34l-11.996-35.989s-19.537-62.038-22.278-65.123c0 0-2.833-2.092-5.377-4.695-2.498-2.556-4.72-5.603-3.702-7.643 2.057-4.112 2.057-6.683 0-10.283-2.057-3.598-2.571-8.74-2.571-12.339 0 0-11.825-36.503-15.938-44.214z"
      ></path>
      <g clipPath="url(#a)" transform="matrix(0 .51167 -.51167 0 262.22 1.5)">
        <path d="M0 0h1200v200H0z"></path>
        <path fill="#fff" d="M0 200h1200v200H0z"></path>
        <path fill="#007a3d" d="M0 400h1200v200H0z"></path>
        <path fill="#ce1126" d="M0 0l400 300L0 600z"></path>
      </g>
    </svg>
  );
}
